import React from 'react';
import { Modal, Descriptions, Avatar, Tag, Row, Col, Divider } from 'antd';
import { UserOutlined, CheckCircleOutlined, CloseCircleOutlined, CalendarOutlined, IdcardOutlined } from '@ant-design/icons';

const ViewUser = ({ visible, record, onCancel }) => {
  if (!record) return null;

  // ‚úÖ S·ª≠ d·ª•ng role t·ª´ API response
  const getUserRole = (user) => {
    if (!user.role) return 'user';
    
    const roleType = user.role.roleType;
    
    // Map by roleType
    switch (roleType) {
      case 2: return 'doctor';
      case 4: return 'hospitalAdmin';
      case 5: return 'systemAdmin';
      case 6: return 'patient';
      case 7: return 'nurse';
      default: return 'user';
    }
  };

  // ‚úÖ Chuy·ªÉn ƒë·ªïi role display name sang ti·∫øng Vi·ªát
  const getRoleDisplayName = (user) => {
    if (!user.role) return 'Ng∆∞·ªùi d√πng';
    
    const roleType = user.role.roleType;
    switch (roleType) {
      case 2: return 'B√°c sƒ©';
      case 4: return 'Qu·∫£n tr·ªã vi√™n B·ªánh vi·ªán';
      case 5: return 'Qu·∫£n tr·ªã vi√™n H·ªá th·ªëng';
      case 6: return 'B·ªánh nh√¢n';
      case 7: return 'Y t√°';
      default: return 'Ng∆∞·ªùi d√πng';
    }
  };

  const getRoleColor = (role) => {
    switch (role) {
      case 'systemAdmin':
        return '#faad14'; // Gold
      case 'hospitalAdmin':
        return '#722ed1'; // Purple
      case 'doctor':
        return '#52c41a'; // Green
      case 'nurse':
        return '#13c2c2'; // Cyan
      case 'patient':
        return '#1890ff'; // Blue
      default:
        return '#8c8c8c'; // Gray
    }
  };

  // ‚úÖ Format date properly (handle "0001-01-01" from API) - Ti·∫øng Vi·ªát
  const formatDate = (dateString) => {
    if (!dateString || dateString === '0001-01-01' || dateString.startsWith('0001-01-01')) {
      return 'Ch∆∞a cung c·∫•p';
    }
    try {
      return new Date(dateString).toLocaleDateString('vi-VN', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    } catch {
      return 'Ng√†y kh√¥ng h·ª£p l·ªá';
    }
  };

  // ‚úÖ Format gender - Ti·∫øng Vi·ªát
  const formatGender = (gender) => {
    if (gender === null || gender === undefined) return 'Ch∆∞a x√°c ƒë·ªãnh';
    return gender ? 'Nam' : 'N·ªØ';
  };

  // ‚úÖ Get verification status with proper null handling - Ti·∫øng Vi·ªát
  const getVerificationStatus = (isVerified) => {
    if (isVerified === null || isVerified === undefined) {
      return (
        <span style={{ display: 'flex', alignItems: 'center' }}>
          <span style={{ color: '#8c8c8c' }}>Ch∆∞a thi·∫øt l·∫≠p</span>
        </span>
      );
    }
    return isVerified ? (
      <span style={{ display: 'flex', alignItems: 'center' }}>
        <CheckCircleOutlined style={{ color: '#52c41a', marginRight: 4 }} />
        <span style={{ color: '#52c41a' }}>ƒê√£ x√°c th·ª±c</span>
      </span>
    ) : (
      <span style={{ display: 'flex', alignItems: 'center' }}>
        <CloseCircleOutlined style={{ color: '#ff4d4f', marginRight: 4 }} />
        <span style={{ color: '#ff4d4f' }}>Ch∆∞a x√°c th·ª±c</span>
      </span>
    );
  };

  const role = getUserRole(record);
  const roleDisplayName = getRoleDisplayName(record);

  return (
    <Modal
      title={
        <div style={{ display: 'flex', alignItems: 'center' }}>
          <UserOutlined style={{ color: '#1890ff', marginRight: 8, fontSize: '16px' }} />
          <span style={{ fontSize: '16px', fontWeight: 600 }}>
            Chi ti·∫øt Ng∆∞·ªùi d√πng: {record.fullname || 'Kh√¥ng r√µ'}
          </span>
        </div>
      }
      open={visible}
      onCancel={onCancel}
      footer={null}
      width={900}
      className="custom-modal"
      destroyOnClose
    >
      <div style={{ padding: '20px 0' }}>
        {/* ‚úÖ User Avatar and Basic Info */}
        <Row gutter={24} style={{ marginBottom: 24 }}>
          <Col span={6}>
            <div style={{ textAlign: 'center' }}>
              <Avatar
                size={120}
                icon={<UserOutlined />}
                src={record.avatarUrl || undefined}
                style={{ backgroundColor: '#1890ff', marginBottom: 16 }}
              />
              <div>
                <Tag 
                  color={getRoleColor(role)} 
                  style={{ fontSize: '14px', padding: '4px 12px', marginBottom: 8 }}
                >
                  {roleDisplayName?.toUpperCase() || 'NG∆Ø·ªúI D√ôNG'}
                </Tag>
              </div>
              <div>
                <Tag color={record.active ? 'success' : 'default'}>
                  {record.active ? 'HO·∫†T ƒê·ªòNG' : 'NG∆ØNG HO·∫†T ƒê·ªòNG'}
                </Tag>
              </div>
            </div>
          </Col>
          <Col span={18}>
            <Descriptions column={2} bordered size="small">
              <Descriptions.Item label="H·ªç v√† t√™n" span={2}>
                <strong>{record.fullname || 'Ch∆∞a c√≥'}</strong>
              </Descriptions.Item>
              <Descriptions.Item label="T√™n ƒëƒÉng nh·∫≠p">
                {record.userName || 'Ch∆∞a c√≥'}
              </Descriptions.Item>
              <Descriptions.Item label="ID ng∆∞·ªùi d√πng">
                <code>{record.id || 'Ch∆∞a c√≥'}</code>
              </Descriptions.Item>
              <Descriptions.Item label="Email">
                {record.email || 'Ch∆∞a c√≥'}
              </Descriptions.Item>
              <Descriptions.Item label="S·ªë ƒëi·ªán tho·∫°i">
                {record.phoneNumber || 'Ch∆∞a cung c·∫•p'}
              </Descriptions.Item>
            </Descriptions>
          </Col>
        </Row>

        <Divider orientation="left" style={{ fontWeight: 600 }}>
          <span style={{ color: '#1890ff' }}>üìã Th√¥ng tin c√° nh√¢n</span>
        </Divider>
        
        <Descriptions column={2} bordered size="small" style={{ marginBottom: 24 }}>
          <Descriptions.Item label="Ng√†y sinh">
            <span style={{ display: 'flex', alignItems: 'center' }}>
              <CalendarOutlined style={{ marginRight: 4, color: '#1890ff' }} />
              {formatDate(record.dob)}
            </span>
          </Descriptions.Item>
          <Descriptions.Item label="Gi·ªõi t√≠nh">
            {formatGender(record.gender)}
          </Descriptions.Item>
          <Descriptions.Item label="Ngh·ªÅ nghi·ªáp">
            {record.job || 'Ch∆∞a cung c·∫•p'}
          </Descriptions.Item>
          <Descriptions.Item label="CƒÉn c∆∞·ªõc c√¥ng d√¢n">
            <span style={{ display: 'flex', alignItems: 'center' }}>
              <IdcardOutlined style={{ marginRight: 4, color: '#1890ff' }} />
              {record.cccd || 'Ch∆∞a cung c·∫•p'}
            </span>
          </Descriptions.Item>
        </Descriptions>

        <Divider orientation="left" style={{ fontWeight: 600 }}>
          <span style={{ color: '#1890ff' }}>üìç Th√¥ng tin ƒë·ªãa ch·ªâ</span>
        </Divider>
        
        <Descriptions column={2} bordered size="small" style={{ marginBottom: 24 }}>
          <Descriptions.Item label="T·ªânh/Th√†nh ph·ªë">
            {record.province || 'Ch∆∞a cung c·∫•p'}
          </Descriptions.Item>
          <Descriptions.Item label="Ph∆∞·ªùng/X√£">
            {record.ward || 'Ch∆∞a cung c·∫•p'}
          </Descriptions.Item>
          <Descriptions.Item label="ƒê·ªãa ch·ªâ ƒë∆∞·ªùng ph·ªë" span={2}>
            {record.streetAddress || 'Ch∆∞a cung c·∫•p'}
          </Descriptions.Item>
        </Descriptions>

        <Divider orientation="left" style={{ fontWeight: 600 }}>
          <span style={{ color: '#1890ff' }}>üîê Tr·∫°ng th√°i t√†i kho·∫£n</span>
        </Divider>
        
        <Descriptions column={2} bordered size="small" style={{ marginBottom: 24 }}>
          <Descriptions.Item label="X√°c th·ª±c Email">
            {getVerificationStatus(record.isVerifiedEmail)}
          </Descriptions.Item>
          <Descriptions.Item label="X√°c th·ª±c S·ªë ƒëi·ªán tho·∫°i">
            {getVerificationStatus(record.isVerifiedPhone)}
          </Descriptions.Item>
          <Descriptions.Item label="Tr·∫°ng th√°i t√†i kho·∫£n">
            <Tag color={record.active ? 'success' : 'default'} style={{ fontSize: '12px' }}>
              {record.active ? '‚úÖ HO·∫†T ƒê·ªòNG' : '‚è∏Ô∏è NG∆ØNG HO·∫†T ƒê·ªòNG'}
            </Tag>
          </Descriptions.Item>
          <Descriptions.Item label="Ph∆∞∆°ng th·ª©c ƒëƒÉng k√Ω">
            {record.registerProvider === 'Google' ? 'Google' : 
             record.registerProvider === 'Facebook' ? 'Facebook' :
             record.registerProvider || 'ƒêƒÉng k√Ω tr·ª±c ti·∫øp'}
          </Descriptions.Item>
        </Descriptions>

        {/* ‚úÖ Additional System Info */}
        <Divider orientation="left" style={{ fontWeight: 600 }}>
          <span style={{ color: '#1890ff' }}>‚öôÔ∏è Th√¥ng tin h·ªá th·ªëng</span>
        </Divider>
        
        <Descriptions column={2} bordered size="small">
          <Descriptions.Item label="Vai tr√≤ h·ªá th·ªëng">
            <Tag color={getRoleColor(role)} style={{ fontSize: '12px' }}>
              {roleDisplayName}
            </Tag>
          </Descriptions.Item>
          <Descriptions.Item label="M√£ vai tr√≤">
            <code>{record.role?.roleType || 'Kh√¥ng r√µ'}</code>
          </Descriptions.Item>
          <Descriptions.Item label="Ng√†y t·∫°o t√†i kho·∫£n">
            {record.createdAt ? formatDate(record.createdAt) : 'Kh√¥ng r√µ'}
          </Descriptions.Item>
          <Descriptions.Item label="C·∫≠p nh·∫≠t cu·ªëi">
            {record.updatedAt ? formatDate(record.updatedAt) : 'Kh√¥ng r√µ'}
          </Descriptions.Item>
        </Descriptions>
      </div>
    </Modal>
  );
};

export default ViewUser;