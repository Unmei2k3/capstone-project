import React, { useState } from 'react';
import { Modal, Typography, Button, Spin, notification } from 'antd';
import { ExclamationCircleOutlined, DeleteOutlined, BankOutlined } from '@ant-design/icons';
import { deleteDepartment } from '../../../services/departmentService';

const { Text, Paragraph } = Typography;

const DeleteDepartment = ({ visible, record, onCancel, onSuccess }) => {
    const [spinning, setSpinning] = useState(false);

    const success = () => {
        notification.success({
            message: 'Th√†nh c√¥ng',
            description: `ƒê√£ x√≥a khoa "${record?.name}" th√†nh c√¥ng!`,
            placement: 'topRight',
            duration: 3
        });
    };

    const error = (errorMessage) => {
        notification.error({
            message: 'L·ªói',
            description: errorMessage || 'Kh√¥ng th·ªÉ x√≥a khoa. Vui l√≤ng th·ª≠ l·∫°i.',
            placement: 'topRight',
            duration: 5
        });
    };

    // ‚úÖ Enhanced handleDelete v·ªõi error handling chi ti·∫øt
    const handleDelete = async () => {
        if (!record?.id) {
            error('Th√¥ng tin khoa kh√¥ng h·ª£p l·ªá');
            return;
        }

        setSpinning(true);
        
        try {
            console.log('üóëÔ∏è ƒêang x√≥a khoa:', record.id, record.name);
            
            const response = await deleteDepartment(record.id);
            console.log('‚úÖ Ph·∫£n h·ªìi x√≥a khoa:', response);

            // ‚úÖ Validate response
            if (response || response?.success !== false) {
                success();
                
                // ‚úÖ Call onSuccess callback ƒë·ªÉ reload data v√† ƒë√≥ng modal
                if (onSuccess && typeof onSuccess === 'function') {
                    setTimeout(() => {
                        onSuccess(response, { shouldReload: true });
                    }, 500);
                } else {
                    setTimeout(() => {
                        onCancel();
                    }, 1000);
                }
            } else {
                throw new Error('Thao t√°c x√≥a th·∫•t b·∫°i');
            }
        } catch (err) {
            console.error('‚ùå L·ªói khi x√≥a khoa:', err);
            
            // ‚úÖ Enhanced error handling v·ªõi ti·∫øng Vi·ªát
            let errorMessage = 'Kh√¥ng th·ªÉ x√≥a khoa. Vui l√≤ng th·ª≠ l·∫°i.';
            
            if (err.response?.status === 404) {
                errorMessage = 'Kh√¥ng t√¨m th·∫•y khoa ho·∫∑c ƒë√£ ƒë∆∞·ª£c x√≥a.';
            } else if (err.response?.status === 403) {
                errorMessage = 'B·∫°n kh√¥ng c√≥ quy·ªÅn x√≥a khoa n√†y.';
            } else if (err.response?.status === 409) {
                errorMessage = 'Kh√¥ng th·ªÉ x√≥a khoa do c√≥ r√†ng bu·ªôc d·ªØ li·ªáu (b√°c sƒ©, gi∆∞·ªùng b·ªánh, l·ªãch kh√°m, v.v.).';
            } else if (err.response?.data?.message) {
                errorMessage = err.response.data.message;
            } else if (err.message) {
                errorMessage = err.message;
            }
            
            error(errorMessage);
        } finally {
            setSpinning(false);
        }
    };

    // ‚úÖ Enhanced cancel handler
    const handleCancel = () => {
        if (!spinning) {
            onCancel();
        }
    };

    return (
        <Modal
            title={
                <div style={{ display: 'flex', alignItems: 'center' }}>
                    <BankOutlined style={{ color: '#ff4d4f', marginRight: 8 }} />
                    X√≥a Khoa/Ph√≤ng
                </div>
            }
            open={visible} // ‚úÖ Antd v5 compatibility
            onCancel={handleCancel}
            footer={null}
            width={520}
            className="custom-modal"
            destroyOnClose={true}
            centered
            maskClosable={!spinning}
            closable={!spinning}
        >
            <Spin spinning={spinning} tip="ƒêang x√≥a khoa...">
                <div style={{ padding: '20px 0' }}>
                    <div className="delete-warning" style={{ 
                        display: 'flex', 
                        alignItems: 'flex-start',
                        backgroundColor: '#fff2f0',
                        padding: '16px',
                        borderRadius: '6px',
                        border: '1px solid #ffccc7'
                    }}>
                        <ExclamationCircleOutlined 
                            className="delete-warning-icon" 
                            style={{ 
                                color: '#ff4d4f', 
                                fontSize: '24px', 
                                marginRight: '12px',
                                marginTop: '2px'
                            }} 
                        />
                        <div style={{ flex: 1 }}>
                            <Paragraph strong style={{ marginBottom: '8px', color: '#cf1322' }}>
                                B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a khoa/ph√≤ng n√†y?
                            </Paragraph>
                            <Text style={{ display: 'block', marginBottom: '4px' }}>
                                T√™n khoa: <strong>{record?.name || 'Kh√¥ng c√≥ t√™n'}</strong>
                            </Text>
                            <Text type="secondary" style={{ display: 'block', marginBottom: '4px' }}>
                                ID: {record?.id}
                            </Text>
                            <Text type="secondary" style={{ display: 'block' }}>
                                Hospital ID: {record?.hospitalId || 'N/A'}
                            </Text>
                        </div>
                    </div>

                    <Paragraph type="danger" style={{ 
                        marginTop: 16, 
                        padding: '12px',
                        backgroundColor: '#fff1f0',
                        borderLeft: '4px solid #ff4d4f',
                        borderRadius: '4px'
                    }}>
                        ‚ö†Ô∏è <strong>C·∫£nh b√°o quan tr·ªçng:</strong> H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c. T·∫•t c·∫£ d·ªØ li·ªáu li√™n quan ƒë·∫øn khoa/ph√≤ng n√†y s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn, bao g·ªìm:
                        <ul style={{ marginTop: '8px', marginBottom: 0, paddingLeft: '20px' }}>
                            <li>üë®‚Äç‚öïÔ∏è Danh s√°ch b√°c sƒ© v√† nh√¢n vi√™n</li>
                            <li>üõèÔ∏è Ph√¢n b·ªï gi∆∞·ªùng b·ªánh</li>
                            <li>üìÖ L·ªãch kh√°m v√† ca tr·ª±c</li>
                            <li>üí∞ D·ªØ li·ªáu doanh thu c·ªßa khoa</li>
                            <li>üìä L·ªãch s·ª≠ ho·∫°t ƒë·ªông v√† b√°o c√°o</li>
                        </ul>
                    </Paragraph>

                    {/* ‚úÖ Th√™m th√¥ng tin m√¥ t·∫£ n·∫øu c√≥ */}
                    {record?.description && (
                        <div style={{
                            marginTop: 12,
                            padding: '8px 12px',
                            backgroundColor: '#f0f7ff',
                            borderRadius: '4px',
                            border: '1px solid #d6e4ff'
                        }}>
                            <Text style={{ fontSize: '13px', color: '#1890ff' }}>
                                üìù <strong>M√¥ t·∫£:</strong> {record.description}
                            </Text>
                        </div>
                    )}
                </div>

                <div style={{ 
                    marginTop: 24, 
                    textAlign: 'right',
                    borderTop: '1px solid #f0f0f0',
                    paddingTop: '16px'
                }}>
                    <Button 
                        onClick={handleCancel} 
                        style={{ marginRight: 8 }}
                        disabled={spinning}
                    >
                        H·ªßy
                    </Button>
                    <Button 
                        danger 
                        type="primary" 
                        onClick={handleDelete} 
                        icon={<DeleteOutlined />}
                        loading={spinning}
                        disabled={spinning}
                    >
                        {spinning ? 'ƒêang x√≥a...' : 'X√≥a Khoa'}
                    </Button>
                </div>
            </Spin>
        </Modal>
    );
};

export default DeleteDepartment;